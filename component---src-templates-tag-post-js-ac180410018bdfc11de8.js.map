{"version":3,"sources":["webpack:///./src/templates/TagPost.js","webpack:///./src/components/layout/pages/Articles.js","webpack:///./src/components/layout/pages/ArticleSummary.js","webpack:///./src/components/typography/ArticleTitle.js","webpack:///./src/components/typography/ArticleBody.js","webpack:///./src/components/layout/pages/PostList.js"],"names":["pageTitleHandler","pageTitle","_ref","pageContext","tag","data","allMarkdownRemark","edges","location","posts","map","prop","sentence","pageData","title","React","createElement","PostList","Articles","children","Box","pt","ArticleSummary","py","ArticleTitle","Text","as","fontSize","fontWeight","lineHeight","mt","mb","ArticleBody","color","renderPosts","frontmatter","id","excerpt","fields","topic","image","date","path","key","Topic","Image","Object","assign","url","Link","withTextDecoration","to","dangerouslySetInnerHTML","__html","Caption","_ref2","Layout","Flex","flexDirection","MobileScreen","src","caption","captionUrl","captionPx","Body","HeaderSection","PageHeader"],"mappings":"6FAIA,gFAOA,MAAMA,EAAmBC,GACL,QAAdA,EAA4BA,EACzB,kBAGMC,cAMF,IALTC,aAAa,IAAEC,GACfC,MACEC,mBAAmB,MAAEC,IACtB,SACDC,GACHN,EACC,MAAMO,EAAQC,YAAIC,YAAK,QAASJ,GAC1BN,EAAYW,mBAASR,GACrBS,EAAW,CACfC,MAAOb,GAET,OACEc,IAAAC,cAACC,IAAQ,CACPR,MAAOA,EACPR,UAAWD,EAAiBC,GAC5BY,SAAUA,EAAUL,SAAUA,M,uHCrBrBU,MAREhB,IAAA,IAAC,SAAEiB,GAAUjB,EAAA,OAC5Ba,IAAAC,cAACI,MAAG,CACFC,GAAI,GAEHF,ICIUG,MARQpB,IAAA,IAAC,SAAEiB,GAAUjB,EAAA,OAClCa,IAAAC,cAACI,MAAG,CACFG,GAAI,GAEHJ,I,wBCSUK,MAbMtB,IAAA,IAAC,SAAEiB,GAAUjB,EAAA,OAChCa,IAAAC,cAACS,OAAI,CACHC,GAAG,KACHC,SAAS,OACTC,WAAY,IACZC,WAAY,IACZC,GAAI,EACJC,GAAI,GAEHZ,ICIUa,MAbK9B,IAAA,IAAC,SAAEiB,GAAUjB,EAAA,OAC/Ba,IAAAC,cAACS,OAAI,CACHE,SAAS,UACTC,WAAY,IACZC,WAAY,IACZC,GAAI,EACJC,GAAI,EACJE,MAAM,mBAELd,I,gDCOL,MAAMe,EAAchC,IAA2C,IAA1C,YAAEiC,EAAW,GAAEC,EAAE,QAAEC,EAAO,OAAEC,GAAQpC,EACvD,MAAM,MAAEqC,EAAK,MAAEC,EAAK,MAAE1B,EAAK,KAAE2B,GAASN,GAChC,KAAEO,GAASJ,EACjB,OACEvB,IAAAC,cAACE,EAAQ,CAACyB,IAAKP,GACZG,GAASxB,IAAAC,cAAC4B,IAAK,KAAEL,GACjB5B,YAAK,MAAO6B,IACXzB,IAAAC,cAAC6B,IAAKC,OAAAC,OAAA,GACAP,EAAK,CACTQ,IAAKN,KAGT3B,IAAAC,cAACiC,IAAI,CACHC,oBAAoB,EACpBC,GAAIT,GAEJ3B,IAAAC,cAACM,EAAc,KACbP,IAAAC,cAACQ,EAAY,KAAEV,GACfC,IAAAC,cAACgB,EAAW,KAACjB,IAAAC,cAAA,OAAKoC,wBAAyB,CAAEC,OAAQhB,QAGzDtB,IAAAC,cAACsC,IAAO,KACLb,GAEH1B,IAAAC,cAAA,aAISuC,QAAqD,IAApD,MAAE9C,EAAK,UAAER,EAAS,SAAEY,EAAQ,SAAEL,GAAU+C,EACtD,OACExC,IAAAC,cAACwC,IAAM,CAAChD,SAAUA,EAAUK,SAAUA,GACpCE,IAAAC,cAACyC,OAAI,CAACC,cAAc,UAClB3C,IAAAC,cAAC2C,IAAY,KACX5C,IAAAC,cAAC6B,IAAK,CACJe,IAAI,yIACJZ,IAAI,0CACJa,QAAQ,6BACRC,WAAW,mCACXC,UAAW,KAGfhD,IAAAC,cAACgD,IAAI,KACHjD,IAAAC,cAACiD,IAAa,KACZlD,IAAAC,cAACkD,IAAU,KACRjE,IAGJQ,EAAMC,IAAIwB","file":"component---src-templates-tag-post-js-ac180410018bdfc11de8.js","sourcesContent":["// @flow\n\nimport type { Node } from 'react';\n\nimport React from 'react';\nimport { graphql } from \"gatsby\";\nimport { map, prop } from 'ramda';\nimport { sentence } from 'change-case';\nimport PostList from '../components/layout/pages/PostList';\n\n\nconst pageTitleHandler = pageTitle => {\n  if (pageTitle !== 'Til') return pageTitle\n  return 'Today I Learned'\n}\n\nexport default ({\n    pageContext: { tag },\n    data: {\n      allMarkdownRemark: { edges },\n    },\n    location\n}): Node => {\n  const posts = map(prop('node'), edges)\n  const pageTitle = sentence(tag);\n  const pageData = {\n    title: pageTitle\n  }\n  return (\n    <PostList\n      posts={posts}\n      pageTitle={pageTitleHandler(pageTitle)}\n      pageData={pageData} location={location}\n    />\n  )\n}\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: {\n        tags: { eq: $tag }\n        published: { ne: false }\n      } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            image {\n              src\n              caption\n              captionUrl\n            }\n          }\n          fields {\n            path\n          }\n          html\n        }\n      }\n    }\n  }\n`\n","import React from 'react';\nimport { Box } from 'rebass';\n\nconst Articles = ({ children }) => (\n  <Box\n    pt={2}\n  >\n    {children}\n  </Box>\n);\n\nexport default Articles;\n","import React from 'react';\nimport { Box } from 'rebass';\n\nconst ArticleSummary = ({ children }) => (\n  <Box\n    py={3}\n  >\n    {children}\n  </Box>\n);\n\nexport default ArticleSummary;\n","import React from 'react';\nimport { Text } from 'rebass';\n\nconst ArticleTitle = ({ children }) => (\n  <Text\n    as=\"h2\"\n    fontSize=\"1rem\"\n    fontWeight={600}\n    lineHeight={1.2}\n    mt={0}\n    mb={2}\n  >\n    {children}\n  </Text>\n);\n\nexport default ArticleTitle;\n","import React from 'react';\nimport { Text } from 'rebass';\n\nconst ArticleBody = ({ children }) => (\n  <Text\n    fontSize=\".875rem\"\n    fontWeight={400}\n    lineHeight={1.6}\n    mt={0}\n    mb={2}\n    color=\"rgb(85, 85, 85)\"\n  >\n    {children}\n  </Text>\n);\n\nexport default ArticleBody;\n","import type { Node } from 'react';\n\nimport React from 'react';\nimport { Flex } from 'rebass';\nimport { prop } from 'ramda';\nimport Layout from '../../layout';\nimport HeaderSection from '../../layout/pages/HeaderSection';\nimport Body from '../../layout/pages/Body';\nimport Articles from '../../layout/pages/Articles';\nimport ArticleSummary from '../../layout/pages/ArticleSummary';\nimport PageHeader from '../../typography/PageHeader';\nimport Topic from '../../typography/Topic';\nimport ArticleTitle from '../../typography/ArticleTitle';\nimport ArticleBody from '../../typography/ArticleBody';\nimport Caption from '../../typography/Caption';\nimport Link from '../../link';\nimport Image from '../../images/Image';\nimport MobileScreen from '../../devices/Mobile';\n\nconst renderPosts = ({ frontmatter, id, excerpt, fields }) => {\n  const { topic, image, title, date } = frontmatter;\n  const { path } = fields;\n  return (\n    <Articles key={id}>\n      {topic && <Topic>{topic}</Topic>}\n      {prop('src', image) && (\n        <Image\n          {...image}\n          url={path}\n        />\n      )}\n      <Link\n        withTextDecoration={false}\n        to={path}\n      >\n        <ArticleSummary>\n          <ArticleTitle>{title}</ArticleTitle>\n          <ArticleBody><div dangerouslySetInnerHTML={{ __html: excerpt }}/></ArticleBody>\n        </ArticleSummary>\n      </Link>\n      <Caption>\n        {date}\n      </Caption>\n      <hr />\n    </Articles>\n  );\n}\nexport default ({ posts, pageTitle, pageData, location }): Node => {\n  return (\n    <Layout location={location} pageData={pageData}>\n      <Flex flexDirection=\"column\">\n        <MobileScreen>\n          <Image\n            src=\"https://images.unsplash.com/photo-1489533119213-66a5cd877091?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1502&q=80\"\n            url=\"https://unsplash.com/photos/IuLgi9PWETU\"\n            caption=\"Photo By Danielle Maclnnes\"\n            captionUrl=\"https://unsplash.com/@dsmacinnes\"\n            captionPx={3}\n          />\n        </MobileScreen>\n        <Body>\n          <HeaderSection>\n            <PageHeader>\n              {pageTitle}\n            </PageHeader>\n          </HeaderSection>\n          {posts.map(renderPosts)}\n        </Body>\n      </Flex>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}