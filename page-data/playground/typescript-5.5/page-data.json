{"componentChunkName":"component---src-templates-blog-post-js","path":"/playground/typescript-5.5/","result":{"data":{"site":{"siteMetadata":{"host":"https://detikpw.github.io"}},"markdownRemark":{"html":"<p>TypeScript 5.5 introduces significant improvements in type inference for array operations, particularly with the filter method. Here's an example demonstrating the enhanced type narrowing <a href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-5-5/\" target=\"_blank\" rel=\"nofollow\">source</a>:</p>\n<pre><code class=\"language-typescript\">  const mixedArray: (number | null)[] = [1, 2, null, 3, null, 4];\n\n  // Before TypeScript 5.5\n  const filteredBefore = mixedArray.filter(x => x !== null);\n  // Type of filteredBefore: (number | null)[]\n\n  // With TypeScript 5.5\n  const filteredAfter = mixedArray.filter(x => x !== null);\n  // Type of filteredAfter: number[]\n</code></pre>\n<p><a href=\"https://www.youtube.com/watch?v=D0969cm_v7g\" target=\"_blank\" rel=\"nofollow\">https://www.youtube.com/watch?v=D0969cm_v7g</a></p>","timeToRead":1,"excerpt":"TypeScript 5.5 introduces significant improvements in type inference for array operations, particularly with the filter method. Here's an example demonstrating the enhanced type narrowing source: https://www.youtube.com/watch?v=D0969cm_v7g","frontmatter":{"date":"July 16, 2024","title":"[TIL] Typescript fix type inference while use filter","topic":null,"tags":["next-js","til"],"image":{"src":"https://images.unsplash.com/photo-1504805572947-34fad45aed93?q=80&w=2340&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D","url":"https://unsplash.com/photos/do-something-great-neon-sign-oqStl2L5oxI","caption":"Photo by Clark Tibbs","captionUrl":"https://unsplash.com/@clarktibbs"}}}},"pageContext":{"pathname":"/playground/typescript-5.5/"}},"staticQueryHashes":["3159585216","3227916582","3466794131","996704362"]}