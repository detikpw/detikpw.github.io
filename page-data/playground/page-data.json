{"componentChunkName":"component---src-templates-category-post-js","path":"/playground","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"cc2a286e-0f40-5a02-981c-3641365856cb","excerpt":"A collection of free public APIs with high health scores that offer a variety of functionalities including IP geolocation, data on Rick and Morty characters, UK postcode lookup, Kanye West quotes, Harry Potter characters and spells, useless facts…","frontmatter":{"date":"September 25, 2024","title":"Free Public API","image":null},"fields":{"path":"/playground/free-public-api/"},"html":"<blockquote>\n<p>A collection of free public APIs with high health scores that offer a variety of functionalities including IP geolocation, data on Rick and Morty characters, UK postcode lookup, Kanye West quotes, Harry Potter characters and spells, useless facts, weather data, holidays information, and more. These APIs support REST and sometimes GraphQL endpoints, providing reliable and valuable data for developers. - daily.dev</p>\n</blockquote>\n<p><a href=\"https://www.freepublicapis.com/\" target=\"_blank\" rel=\"nofollow\">https://www.freepublicapis.com/</a>\ncredit daily.dev and hacker news</p>"}},{"node":{"id":"60251757-214b-5300-b8aa-c7eb77af2f1c","excerpt":"Today I learned more about Gleam, a fascinating programming language that caught my eye. I was actually looking into Elixir, but Gleam popped up on my timeline recently, and I got distracted into revisiting its introduction just for fun. Gleam is a…","frontmatter":{"date":"July 19, 2024","title":"[TIL] Gleam: A Fresh Take on Functional Programming","image":{"src":"https://gleam.run//images/social-image.png","caption":"https://gleam.run/","captionUrl":"https://gleam.run/"}},"fields":{"path":"/playground/about-gleam/"},"html":"<p>Today I learned more about Gleam, a fascinating programming language that caught my eye. I was actually looking into Elixir, but Gleam popped up on my timeline recently, and I got distracted into revisiting its introduction just for fun. Gleam is a statically-typed functional language running on the Erlang virtual machine, promising to blend reliability with scalability. What really intrigues me is its type system with full type inference and algebraic data types, which could help catch errors early in development. As someone who's spent countless hours debugging, this feature alone has me excited about Gleam's potential.</p>\n<p>While Gleam is still relatively new and its ecosystem is growing, it's showing promise in addressing common development challenges. Its ability to compile to both Erlang and JavaScript opens up possibilities for various applications, from backend services to web development. Here's an example from the Gleam documentation that showcases its pattern matching capabilities:</p>\n<pre><code>pub fn describe(x) {\n  case x {\n    0 -> \"Zero\"\n    n if n &#x3C; 0 -> \"Negative\"\n    n if n > 0 -> \"Positive\"\n  }\n}\n\npub fn main() {\n  io.println(describe(0))    // Prints: Zero\n  io.println(describe(-5))   // Prints: Negative\n  io.println(describe(10))   // Prints: Positive\n}\n</code></pre>\n<p>I really like Gleam's syntax as it reminds me of when I used Elm, ReasonML, and F#. This example demonstrates Gleam's elegant pattern matching, which is a powerful feature in functional programming. Though it's interesting to explore new technologies like Gleam, I'll probably focus more on Elixir or Haskell for now, given its more active job market. Still, it's exciting to see how languages like Gleam might shape the future of programming.</p>"}},{"node":{"id":"e795fa2a-2f25-5a5f-80ac-9e699fd20659","excerpt":"TypeScript 5.5 introduces significant improvements in type inference for array operations, particularly with the filter method. Here's an example demonstrating the enhanced type narrowing source: https://www.youtube.com/watch?v=D0969cm_v7g","frontmatter":{"date":"July 16, 2024","title":"[TIL] Typescript fix type inference while use filter","image":{"src":"https://images.unsplash.com/photo-1504805572947-34fad45aed93?q=80&w=2340&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D","caption":"Photo by Clark Tibbs","captionUrl":"https://unsplash.com/@clarktibbs"}},"fields":{"path":"/playground/typescript-5.5/"},"html":"<p>TypeScript 5.5 introduces significant improvements in type inference for array operations, particularly with the filter method. Here's an example demonstrating the enhanced type narrowing <a href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-5-5/\" target=\"_blank\" rel=\"nofollow\">source</a>:</p>\n<pre><code class=\"language-typescript\">  const mixedArray: (number | null)[] = [1, 2, null, 3, null, 4];\n\n  // Before TypeScript 5.5\n  const filteredBefore = mixedArray.filter(x => x !== null);\n  // Type of filteredBefore: (number | null)[]\n\n  // With TypeScript 5.5\n  const filteredAfter = mixedArray.filter(x => x !== null);\n  // Type of filteredAfter: number[]\n</code></pre>\n<p><a href=\"https://www.youtube.com/watch?v=D0969cm_v7g\" target=\"_blank\" rel=\"nofollow\">https://www.youtube.com/watch?v=D0969cm_v7g</a></p>"}},{"node":{"id":"c3a0ffee-1419-5fb5-a38e-6406a2cbd43c","excerpt":"I just found this website called CSS Gradient Generator. It's free and really easy to use! it helps me as playground to make  color gradients. You can make different types of gradients and choose any colors you want. The best part? It gives you the…","frontmatter":{"date":"July 15, 2024","title":"[TIL] CSS Gradient Generator","image":{"src":"https://images.unsplash.com/photo-1721067915975-95db90691320?q=80&w=2464&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D","caption":"Photo by Bernd 📷 Dittrich","captionUrl":"https://unsplash.com/@hdbernd"}},"fields":{"path":"/playground/css-gradient-generator/"},"html":"<p>I just found this website called CSS Gradient Generator. It's free and really easy to use! it helps me as playground to make  color gradients. You can make different types of gradients and choose any colors you want. The best part? It gives you the CSS code right away, so you can use it in your projects. I'm not an expert, but this tool makes me feel like I can make my websites look amazing. I can't wait to try it out more!</p>\n<p><a href=\"https://cssgradientgenerator.com/?ref=producthunt\" target=\"_blank\" rel=\"nofollow\">https://cssgradientgenerator.com/?ref=producthunt</a></p>"}},{"node":{"id":"368cecbf-68b2-527a-8040-1682fb94788c","excerpt":"Di next js untuk menambahkan konfigurasi ada dua cara, ketika build dan ketika runtime, untuk konfigurasi ketika build bisa dilihat disini Ketika runtime, ada dua akses konfigurasi yaitu publicRuntimeConfig dan serverRuntimeConfig, untuk yang…","frontmatter":{"date":"October 02, 2019","title":"[TIL] Menggunakan Konfigurasi Client di next js","image":{"src":"https://images.unsplash.com/photo-1533073526757-2c8ca1df9f1c?ixlib=rb-1.2.1&auto=format&fit=crop&w=2550&q=80","caption":"Photo by Javier Allegue Barros","captionUrl":"https://unsplash.com/@soymeraki"}},"fields":{"path":"/playground/next-js-client-env/"},"html":"<p>Di next js untuk menambahkan konfigurasi ada dua cara, ketika build dan ketika runtime, untuk konfigurasi ketika build bisa dilihat <a href=\"https://github.com/zeit/next.js#build-time-configuration\" target=\"_blank\" rel=\"nofollow\">disini</a></p>\n<p>Ketika runtime, ada dua akses konfigurasi yaitu publicRuntimeConfig dan serverRuntimeConfig, untuk yang konfigurasi yang hanya diimplementasika di server disimpan di serverRuntimeConfig dan untuk configurasi di client dan server bisa disimpan di publicRuntimeConfig, kedua akses konfigurasi tersebut disimpan di next.config.js</p>\n<pre><code class=\"language-javascript\">  // next.config.js\n  const env = required('./config')\n  const {\n    API_URL,\n    API_PATH\n  } = env;\n\n  module.exports = {\n    publicRuntimeConfig: {\n      API_URL,\n      API_PATH\n    }\n  };\n</code></pre>\n<pre><code class=\"language-javascript\">  // client\n  import getConfig from 'next/config';\n\n  const {publicRuntimeConfig} = getConfig();\n  const {API_PATH, API_URL} = publicRuntimeConfig;\n  \n</code></pre>\n<p><a href=\"https://github.com/zeit/next.js#runtime-configuration\" target=\"_blank\" rel=\"nofollow\">source</a></p>"}},{"node":{"id":"eca7499d-f4b4-5b41-a7fe-ab9fbee27015","excerpt":"Alhamdulillah kelar juga nih blog (belum kelar pake banget juga sih), sebelumnya udah pernah mainan dengan gatsby v1, kalo ditanya\nbedanya apa kalo di gatsby v2 yang saya tahu cuman kalo di gatsby 1 ada magic untuk wrap component dengan layout-nya…","frontmatter":{"date":"March 14, 2019","title":"Membuat Static Site Dengan Menggunakan Gatsby js","image":null},"fields":{"path":"/playground/gatsby/"},"html":"<p>Alhamdulillah kelar juga nih blog (belum kelar pake banget juga sih), sebelumnya udah pernah mainan dengan gatsby v1, kalo ditanya\nbedanya apa kalo di gatsby v2 yang saya tahu cuman kalo di gatsby 1 ada magic untuk wrap component dengan <a href=\"https://www.gatsbyjs.org/docs/layout-components/#how-to-prevent-layout-components-from-unmounting\" target=\"_blank\" rel=\"nofollow\">layout-nya</a> dan ada StaticQuery untuk query data untuk component yang bukan page.</p>\n<p>Untuk style saya gunakan <a href=\"https://rebassjs.org/\" target=\"_blank\" rel=\"nofollow\">Rebass</a> yang dibuat oleh <a href=\"https://github.com/jxnblk\" target=\"_blank\" rel=\"nofollow\">jxnblk alias Brent Jackson</a>, sempat lihat di timeline twitter om Jackson ini baru-baru ini direkrut oleh gatsby (omedetou selamat om!! hilih makin oot) yang saya suka sebenarnya karena konsep core <a href=\"https://github.com/styled-system/styled-system\" target=\"_blank\" rel=\"nofollow\">styled-system</a>-nya bikin paradigma beripikir kita tentang styling itu dianggap sebagai box / kotak kecil.</p>\n<p>untuk plugin dan extra package yang saya pakai styled-component, remark-prismjs, transformer-remark, remark-responsive-iframe untuk handle iframe di page yang digenerate melalu markdown biar responsive bin elastis bin proporsional, ada juga plugin twitter supaya link yang saya masukkan jadi twitter card, react helmet untuk handle document head, saat ini saya juga pakai react responsive untuk handle responsive. Link googling sendiri ya.</p>\n<p>oh ya tidak lupa saya ucapkan terima kasih kepada paman larry alias <a href=\"https://www.linkedin.com/in/adith-widya-pradipta-3a777894/\" target=\"_blank\" rel=\"nofollow\">Adith</a> yang udah saya repotkan dengan pertanyaan terkait dengan styling... u know.. css is scary.. :ghost:</p>\n<p align=\"center\">\n  <a href=\"https://me.me/i/what-is-a-backend-developer-backend-developer-it-mean-he-7dbe83e26f414035993a22bf279de60f\">\n    <img width=\"100%\" src=\"https://pics.me.me/what-is-a-backend-developer-backend-developer-it-mean-he-41886990.png\">\n  </a>\n</p>"}},{"node":{"id":"eb29444d-e164-5765-94d1-4c6fc096be1a","excerpt":"Artikel ini ketika dibuat sempat terpotong 2-3 bulan besar kemungkinan ada kesalahan. Maka saya semakin tidak bertanggung jawab bila database anda hilang, malfunction, atau dicomot kucing. Sering dapat notifikasi cinta dari om Zorin bahwa direktori…","frontmatter":{"date":"September 21, 2017","title":"Memindahkan Penyimpanan Database Postgre Ke Direktori Lain","image":null},"fields":{"path":"/playground/memindahkan-penyimpanan-database-psql/"},"html":"<blockquote>\n<p>Artikel ini ketika dibuat sempat terpotong 2-3 bulan besar kemungkinan ada kesalahan. Maka saya semakin tidak bertanggung jawab bila database anda hilang, malfunction, atau dicomot kucing.</p>\n</blockquote>\n<p>Sering dapat notifikasi cinta dari om Zorin bahwa direktori root di notebook kantor udah sekarat, ternyata gemuk karena image docker dan postgresql (psql) image docker 15 GB dan psql yang mencapai 30 GB. Image docker tanpa pikir panjang langsung hapus, sebenarnya lumayan sih langsung ada space sekitar 17 GB, tapi penasaran ternyata data psql bisa dipindahkan, nah kebetulan yang bikin nih root sempit karena hdd yang dijadikan root itu SSD 100 GB hasil bagi-bagi, root dapat jatah 67 GB, jadi rencananya mau bikin 1 partisi lagi yang diambil dari hdd yang lain (non SSD 1 TB), karena data psql ini aslinya udah jarang dipake, nampaknya tak masalah jika saya pindahkan ke non ssd.</p>\n<p>Yang akan dipelajari:</p>\n<ol>\n<li>Konfigurasi psql.</li>\n<li>Konfigurasi auto mount partisi menggunakan fstab.</li>\n</ol>\n<p>Yang perlu dipersiapkan:</p>\n<ol>\n<li>Partisi linux (saya menggunakan ext4).</li>\n<li>Mengetahui lokasi default data psql.</li>\n</ol>\n<p>Langkah-langkah:</p>\n<ol>\n<li>\n<p>Masuk ke psql command line</p>\n<p><code>sudo -u postgres psql</code></p>\n</li>\n<li>\n<p>Lalu gunakan command di bawah ini untuk mengetahui lokasi default data postgre anda, bila sudah ketik <code>\\q</code> untuk keluar dari cli-nya postgre</p>\n<p><code>SHOW data_directory;</code></p>\n<pre><code class=\"language-bash\">    data_directory\n------------------------------\n/var/lib/postgresql/9.5/main\n(1 row)\n</code></pre>\n</li>\n<li>\n<p>Matikan service postgre anda</p>\n<p><code>sudo systemctl stop postgresql</code></p>\n</li>\n<li>\n<p>Buat <em>mount point</em></p>\n<p><code>sudo mkdir /media/data</code></p>\n</li>\n<li>\n<p>Catat uuid pada partisi yang akan anda gunakan</p>\n<p><code>sudo blkid</code></p>\n</li>\n<li>\n<p>Gunakan editor favorit anda untuk mengubah file /etc/fstab, gunakan uuid yang didapat pada langkah sebelumnya</p>\n<p><code>sudo vim /etc/fstab</code>\n<code>UUID=0f713ecd-564f-4a14-868b-2aefe36ed2dc /media/data ext4 defaults 0 2</code></p>\n</li>\n<li>\n<p>Pastikan partisi baru anda bisa digunakan, bila sudah salin folder postgre ke partisi yang baru saja dibuat</p>\n<p><code>sudo rsync -av /var/lib/postgresql /media/data/psql</code></p>\n</li>\n<li>\n<p>Bila sudah selesai backup database</p>\n<p><code>sudo mv /var/lib/postgresql/9.5/main /var/lib/postgresql/9.5/main.bak</code></p>\n</li>\n<li>\n<p>Lalu ke configurasi postgre ubah nilah data_directory\n<code>sudo vim /etc/postgresql/9.5/main/postgresql.conf</code></p>\n<p><code>data_directory = '/media/data/psql/postgresql/9.5/main'</code></p>\n</li>\n<li>\n<p>Hidupkan kembali postgre service</p>\n<p><code>sudo systemctl start postgresql</code></p>\n</li>\n<li>Gunakan langkah no.2 untuk cek kembali apakah data_directory sudah mengarah ke partisi baru</li>\n</ol>\n<p>Bila iya bisa restart kembali postgre service-nya untuk memastikan.</p>\n<p>Edit:\nBaca ulang ternyata kurang referensi:\n<a href=\"https://www.digitalocean.com/community/tutorials/how-to-move-a-postgresql-data-directory-to-a-new-location-on-ubuntu-16-04\" target=\"_blank\" rel=\"nofollow\">digital ocean</a></p>"}},{"node":{"id":"e6b4e4ac-de6a-5aa9-a9ec-e31a62e9de13","excerpt":"Konfigurasi di os linux dan mac os umumnya disimpan dalam bentuk hidden files atau biasa disebut dengan dotfiles contoh .vimrc untuk vim .zshrc untuk zsh dll. Ada baiknya dotfiles ini dibackup karena apabila kita berganti device atau mengganti os…","frontmatter":{"date":"August 27, 2017","title":"Mengelola Dotfiles","image":{"src":null,"caption":null,"captionUrl":null}},"fields":{"path":"/playground/mengelola-dotfiles/"},"html":"<p>Konfigurasi di os linux dan mac os umumnya disimpan dalam bentuk hidden files atau biasa disebut dengan dotfiles contoh .vimrc untuk vim .zshrc untuk zsh dll. Ada baiknya dotfiles ini dibackup karena apabila kita berganti device atau mengganti os file-file konfigurasi yang dulu kita gunakan bisa kita gunakan kembali.</p>\n<p>Yang perlu disiapkan:</p>\n<ol>\n<li>Niat</li>\n<li>Git</li>\n<li>Akun di repository management services misal <a href=\"https://github.com\" target=\"_blank\" rel=\"nofollow\">Github</a>, <a href=\"https://gitlab.com\" target=\"_blank\" rel=\"nofollow\">Gitlab</a>, atau <a href=\"https://bitbucket.org\" target=\"_blank\" rel=\"nofollow\">Bitbucket</a></li>\n</ol>\n<p>Yang perlu diperhatikan Karena metode yang digunakan ini menyimpan konfigurasi kita di repository management service terlebih jika kita beri akses publik mohon untuk tidak menyimpan file-file ini dalam git anda:</p>\n<ol>\n<li>File yang sifatnya credential, misal private key, .aws dll</li>\n<li>File yang sifatnya rahasia .slip<em>gaji, .list</em>mantan, .berat<em>badan .belanjaan</em>istri dll</li>\n</ol>\n<p>Cara yang digunakan ini merunut pada <a href=\"https://github.com/jaagr/dots\" target=\"_blank\" rel=\"nofollow\">jaagr</a> karena gak perlu symlink, copy atau semacamnya.</p>\n<p>Berikut langkah langkahnya</p>\n<ol>\n<li><code>alias dots='git –git-dir=$HOME/.dots.git/ –work-tree=$HOME</code>\nBuat alias di shell kesayangan anda .zshrc atau .bashrc, yang fungsinya ialah membuat command dots yang mengeksekusi command git yang selalu merujuk direktori .dots.git (yang nanti akan kita buat) dengan working space yang digunakan direktori user home anda, jangan lupa untuk merefresh shell anda</li>\n<li><code>git init –bare $HOME/.dots.git</code>\ndots remote add origin ${dots<em>repo</em>anda}\nfungsinya ialah membuat direktori git dengan nama .dots.git di direktori home user anda dan menambahkan remote repo anda</li>\n<li><code>dots config status.showUntrackedFiles no</code>\nBuat alias\n<code>dots config alias.untracked “status -u .”</code>\n<code>dots config alias.untracked-at “status -u”</code>\nfungsinya ialah agar tidak menampilkan untracked file pada direktori $HOME yang kita gunakan sebagai work-tree, dan membuat alias baru untuk menampilkan untracked files</li>\n<li>\n<p>Gunakan alias dots seperti anda menggunakan command git</p>\n<pre><code class=\"language-bash\">dots status dots add -u\ndots commit -m “…“\ndots push\nList file yang tidak dipantau oleh git\ndots untracked\ndots status -u .config/\nList file yang ditracked oleh git\ndots ls-files\ndots ls-files .config/polybar/\n</code></pre>\n</li>\n</ol>"}}]}},"pageContext":{"category":"playground"}},"staticQueryHashes":["3159585216","3227916582","3466794131","996704362"]}