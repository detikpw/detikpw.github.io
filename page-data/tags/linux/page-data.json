{"componentChunkName":"component---src-templates-tag-post-js","path":"/tags/linux","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"eb29444d-e164-5765-94d1-4c6fc096be1a","excerpt":"Artikel ini ketika dibuat sempat terpotong 2-3 bulan besar kemungkinan ada kesalahan. Maka saya semakin tidak bertanggung jawab bila database anda hilang, malfunction, atau dicomot kucing. Sering dapat notifikasi cinta dari om Zorin bahwa direktori…","frontmatter":{"date":"September 21, 2017","title":"Memindahkan Penyimpanan Database Postgre Ke Direktori Lain","image":null},"fields":{"path":"/playground/memindahkan-penyimpanan-database-psql/"},"html":"<blockquote>\n<p>Artikel ini ketika dibuat sempat terpotong 2-3 bulan besar kemungkinan ada kesalahan. Maka saya semakin tidak bertanggung jawab bila database anda hilang, malfunction, atau dicomot kucing.</p>\n</blockquote>\n<p>Sering dapat notifikasi cinta dari om Zorin bahwa direktori root di notebook kantor udah sekarat, ternyata gemuk karena image docker dan postgresql (psql) image docker 15 GB dan psql yang mencapai 30 GB. Image docker tanpa pikir panjang langsung hapus, sebenarnya lumayan sih langsung ada space sekitar 17 GB, tapi penasaran ternyata data psql bisa dipindahkan, nah kebetulan yang bikin nih root sempit karena hdd yang dijadikan root itu SSD 100 GB hasil bagi-bagi, root dapat jatah 67 GB, jadi rencananya mau bikin 1 partisi lagi yang diambil dari hdd yang lain (non SSD 1 TB), karena data psql ini aslinya udah jarang dipake, nampaknya tak masalah jika saya pindahkan ke non ssd.</p>\n<p>Yang akan dipelajari:</p>\n<ol>\n<li>Konfigurasi psql.</li>\n<li>Konfigurasi auto mount partisi menggunakan fstab.</li>\n</ol>\n<p>Yang perlu dipersiapkan:</p>\n<ol>\n<li>Partisi linux (saya menggunakan ext4).</li>\n<li>Mengetahui lokasi default data psql.</li>\n</ol>\n<p>Langkah-langkah:</p>\n<ol>\n<li>\n<p>Masuk ke psql command line</p>\n<p><code>sudo -u postgres psql</code></p>\n</li>\n<li>\n<p>Lalu gunakan command di bawah ini untuk mengetahui lokasi default data postgre anda, bila sudah ketik <code>\\q</code> untuk keluar dari cli-nya postgre</p>\n<p><code>SHOW data_directory;</code></p>\n<pre><code class=\"language-bash\">    data_directory\n------------------------------\n/var/lib/postgresql/9.5/main\n(1 row)\n</code></pre>\n</li>\n<li>\n<p>Matikan service postgre anda</p>\n<p><code>sudo systemctl stop postgresql</code></p>\n</li>\n<li>\n<p>Buat <em>mount point</em></p>\n<p><code>sudo mkdir /media/data</code></p>\n</li>\n<li>\n<p>Catat uuid pada partisi yang akan anda gunakan</p>\n<p><code>sudo blkid</code></p>\n</li>\n<li>\n<p>Gunakan editor favorit anda untuk mengubah file /etc/fstab, gunakan uuid yang didapat pada langkah sebelumnya</p>\n<p><code>sudo vim /etc/fstab</code>\n<code>UUID=0f713ecd-564f-4a14-868b-2aefe36ed2dc /media/data ext4 defaults 0 2</code></p>\n</li>\n<li>\n<p>Pastikan partisi baru anda bisa digunakan, bila sudah salin folder postgre ke partisi yang baru saja dibuat</p>\n<p><code>sudo rsync -av /var/lib/postgresql /media/data/psql</code></p>\n</li>\n<li>\n<p>Bila sudah selesai backup database</p>\n<p><code>sudo mv /var/lib/postgresql/9.5/main /var/lib/postgresql/9.5/main.bak</code></p>\n</li>\n<li>\n<p>Lalu ke configurasi postgre ubah nilah data_directory\n<code>sudo vim /etc/postgresql/9.5/main/postgresql.conf</code></p>\n<p><code>data_directory = '/media/data/psql/postgresql/9.5/main'</code></p>\n</li>\n<li>\n<p>Hidupkan kembali postgre service</p>\n<p><code>sudo systemctl start postgresql</code></p>\n</li>\n<li>Gunakan langkah no.2 untuk cek kembali apakah data_directory sudah mengarah ke partisi baru</li>\n</ol>\n<p>Bila iya bisa restart kembali postgre service-nya untuk memastikan.</p>\n<p>Edit:\nBaca ulang ternyata kurang referensi:\n<a href=\"https://www.digitalocean.com/community/tutorials/how-to-move-a-postgresql-data-directory-to-a-new-location-on-ubuntu-16-04\" target=\"_blank\" rel=\"nofollow\">digital ocean</a></p>"}},{"node":{"id":"e6b4e4ac-de6a-5aa9-a9ec-e31a62e9de13","excerpt":"Konfigurasi di os linux dan mac os umumnya disimpan dalam bentuk hidden files atau biasa disebut dengan dotfiles contoh .vimrc untuk vim .zshrc untuk zsh dll. Ada baiknya dotfiles ini dibackup karena apabila kita berganti device atau mengganti os…","frontmatter":{"date":"August 27, 2017","title":"Mengelola Dotfiles","image":{"src":null,"caption":null,"captionUrl":null}},"fields":{"path":"/playground/mengelola-dotfiles/"},"html":"<p>Konfigurasi di os linux dan mac os umumnya disimpan dalam bentuk hidden files atau biasa disebut dengan dotfiles contoh .vimrc untuk vim .zshrc untuk zsh dll. Ada baiknya dotfiles ini dibackup karena apabila kita berganti device atau mengganti os file-file konfigurasi yang dulu kita gunakan bisa kita gunakan kembali.</p>\n<p>Yang perlu disiapkan:</p>\n<ol>\n<li>Niat</li>\n<li>Git</li>\n<li>Akun di repository management services misal <a href=\"https://github.com\" target=\"_blank\" rel=\"nofollow\">Github</a>, <a href=\"https://gitlab.com\" target=\"_blank\" rel=\"nofollow\">Gitlab</a>, atau <a href=\"https://bitbucket.org\" target=\"_blank\" rel=\"nofollow\">Bitbucket</a></li>\n</ol>\n<p>Yang perlu diperhatikan Karena metode yang digunakan ini menyimpan konfigurasi kita di repository management service terlebih jika kita beri akses publik mohon untuk tidak menyimpan file-file ini dalam git anda:</p>\n<ol>\n<li>File yang sifatnya credential, misal private key, .aws dll</li>\n<li>File yang sifatnya rahasia .slip<em>gaji, .list</em>mantan, .berat<em>badan .belanjaan</em>istri dll</li>\n</ol>\n<p>Cara yang digunakan ini merunut pada <a href=\"https://github.com/jaagr/dots\" target=\"_blank\" rel=\"nofollow\">jaagr</a> karena gak perlu symlink, copy atau semacamnya.</p>\n<p>Berikut langkah langkahnya</p>\n<ol>\n<li><code>alias dots='git –git-dir=$HOME/.dots.git/ –work-tree=$HOME</code>\nBuat alias di shell kesayangan anda .zshrc atau .bashrc, yang fungsinya ialah membuat command dots yang mengeksekusi command git yang selalu merujuk direktori .dots.git (yang nanti akan kita buat) dengan working space yang digunakan direktori user home anda, jangan lupa untuk merefresh shell anda</li>\n<li><code>git init –bare $HOME/.dots.git</code>\ndots remote add origin ${dots<em>repo</em>anda}\nfungsinya ialah membuat direktori git dengan nama .dots.git di direktori home user anda dan menambahkan remote repo anda</li>\n<li><code>dots config status.showUntrackedFiles no</code>\nBuat alias\n<code>dots config alias.untracked “status -u .”</code>\n<code>dots config alias.untracked-at “status -u”</code>\nfungsinya ialah agar tidak menampilkan untracked file pada direktori $HOME yang kita gunakan sebagai work-tree, dan membuat alias baru untuk menampilkan untracked files</li>\n<li>\n<p>Gunakan alias dots seperti anda menggunakan command git</p>\n<pre><code class=\"language-bash\">dots status dots add -u\ndots commit -m “…“\ndots push\nList file yang tidak dipantau oleh git\ndots untracked\ndots status -u .config/\nList file yang ditracked oleh git\ndots ls-files\ndots ls-files .config/polybar/\n</code></pre>\n</li>\n</ol>"}}]}},"pageContext":{"tag":"linux"}},"staticQueryHashes":["3159585216","3227916582","3466794131","996704362"]}